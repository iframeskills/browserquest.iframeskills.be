define(["entity","transition","timer"],function(a,b,c){var d=a.extend({init:function(a,c){var d=this;this._super(a,c),this.nextGridX=-1,this.nextGridY=-1,this.orientation=Types.Orientations.DOWN,this.atkSpeed=50,this.moveSpeed=120,this.walkSpeed=100,this.idleSpeed=450,this.setAttackRate(800),this.movement=new b,this.path=null,this.newDestination=null,this.adjacentTiles={},this.target=null,this.unconfirmedTarget=null,this.attackers={},this.hitPoints=0,this.maxHitPoints=0,this.isDead=!1,this.attackingMode=!1,this.followingMode=!1},clean:function(){this.forEachAttacker(function(a){a.disengage(),a.idle()})},setMaxHitPoints:function(a){this.maxHitPoints=a,this.hitPoints=a},setDefaultAnimation:function(){this.idle()},hasWeapon:function(){return!1},hasShadow:function(){return!0},animate:function(a,b,c,d){var e=["atk","walk","idle"];o=this.orientation;if(!this.currentAnimation||this.currentAnimation.name!=="death")this.flipSpriteX=!1,this.flipSpriteY=!1,_.indexOf(e,a)>=0&&(a+="_"+(o===Types.Orientations.LEFT?"right":Types.getOrientationAsString(o)),this.flipSpriteX=this.orientation===Types.Orientations.LEFT?!0:!1),this.setAnimation(a,b,c,d)},turnTo:function(a){this.orientation=a,this.idle()},setOrientation:function(a){a&&(this.orientation=a)},idle:function(a){this.setOrientation(a),this.animate("idle",this.idleSpeed)},hit:function(a){this.setOrientation(a),this.animate("atk",this.atkSpeed,1)},walk:function(a){this.setOrientation(a),this.animate("walk",this.walkSpeed)},moveTo_:function(a,b,c){this.destination={gridX:a,gridY:b},this.adjacentTiles={};if(this.isMoving())this.continueTo(a,b);else{var d=this.requestPathfindingTo(a,b);this.followPath(d)}},requestPathfindingTo:function(a,b){if(this.request_path_callback)return this.request_path_callback(a,b);log.error(this.id+" couldn't request pathfinding to "+a+", "+b);return[]},onRequestPath:function(a){this.request_path_callback=a},onStartPathing:function(a){this.start_pathing_callback=a},onStopPathing:function(a){this.stop_pathing_callback=a},followPath:function(a){a.length>1&&(this.path=a,this.step=0,this.followingMode&&a.pop(),this.start_pathing_callback&&this.start_pathing_callback(a),this.nextStep())},continueTo:function(a,b){this.newDestination={x:a,y:b}},updateMovement:function(){var a=this.path,b=this.step;a[b][0]<a[b-1][0]&&this.walk(Types.Orientations.LEFT),a[b][0]>a[b-1][0]&&this.walk(Types.Orientations.RIGHT),a[b][1]<a[b-1][1]&&this.walk(Types.Orientations.UP),a[b][1]>a[b-1][1]&&this.walk(Types.Orientations.DOWN)},updatePositionOnGrid:function(){this.setGridPosition(this.path[this.step][0],this.path[this.step][1])},nextStep:function(){var a=!1,b,c,d;this.isMoving()&&(this.before_step_callback&&this.before_step_callback(),this.updatePositionOnGrid(),this.checkAggro(),this.interrupted?(a=!0,this.interrupted=!1):(this.hasNextStep()&&(this.nextGridX=this.path[this.step+1][0],this.nextGridY=this.path[this.step+1][1]),this.step_callback&&this.step_callback(),this.hasChangedItsPath()?(b=this.newDestination.x,c=this.newDestination.y,d=this.requestPathfindingTo(b,c),this.newDestination=null,d.length<2?a=!0:this.followPath(d)):this.hasNextStep()?(this.step+=1,this.updateMovement()):a=!0),a&&(this.path=null,this.idle(),this.stop_pathing_callback&&this.stop_pathing_callback(this.gridX,this.gridY)))},onBeforeStep:function(a){this.before_step_callback=a},onStep:function(a){this.step_callback=a},isMoving:function(){return this.path!==null},hasNextStep:function(){return this.path.length-1>this.step},hasChangedItsPath:function(){return this.newDestination!==null},isNear:function(a,b){var c,d,e=!1;c=Math.abs(this.gridX-a.gridX),d=Math.abs(this.gridY-a.gridY),c<=b&&d<=b&&(e=!0);return e},onAggro:function(a){this.aggro_callback=a},onCheckAggro:function(a){this.checkaggro_callback=a},checkAggro:function(){this.checkaggro_callback&&this.checkaggro_callback()},aggro:function(a){this.aggro_callback&&this.aggro_callback(a)},onDeath:function(a){this.death_callback=a},lookAtTarget:function(){this.target&&this.turnTo(this.getOrientationTo(this.target))},go:function(a,b){this.isAttacking()?this.disengage():this.followingMode&&(this.followingMode=!1,this.target=null),this.moveTo_(a,b)},follow:function(a){a&&(this.followingMode=!0,this.moveTo_(a.gridX,a.gridY))},stop:function(){this.isMoving()&&(this.interrupted=!0)},engage:function(a){this.attackingMode=!0,this.setTarget(a),this.follow(a)},disengage:function(){this.attackingMode=!1,this.followingMode=!1,this.removeTarget()},isAttacking:function(){return this.attackingMode},getOrientationTo:function(a){return this.gridX<a.gridX?Types.Orientations.RIGHT:this.gridX>a.gridX?Types.Orientations.LEFT:this.gridY>a.gridY?Types.Orientations.UP:Types.Orientations.DOWN},isAttackedBy:function(a){return a.id in this.attackers},addAttacker:function(a){this.isAttackedBy(a)?log.error(this.id+" is already attacked by "+a.id):this.attackers[a.id]=a},removeAttacker:function(a){this.isAttackedBy(a)?delete this.attackers[a.id]:log.error(this.id+" is not attacked by "+a.id)},forEachAttacker:function(a){_.each(this.attackers,function(b){a(b)})},setTarget:function(a){this.target!==a?(this.hasTarget()&&this.removeTarget(),this.unconfirmedTarget=null,this.target=a):log.debug(a.id+" is already the target of "+this.id)},removeTarget:function(){var a=this;this.target&&(this.target instanceof d&&this.target.removeAttacker(this),this.target=null)},hasTarget:function(){return this.target!==null},waitToAttack:function(a){this.unconfirmedTarget=a},isWaitingToAttack:function(a){return this.unconfirmedTarget===a},canAttack:function(a){return this.canReachTarget()&&this.attackCooldown.isOver(a)?!0:!1},canReachTarget:function(){return this.hasTarget()&&this.isAdjacentNonDiagonal(this.target)?!0:!1},die:function(){this.removeTarget(),this.isDead=!0,this.death_callback&&this.death_callback()},onHasMoved:function(a){this.hasmoved_callback=a},hasMoved:function(){this.setDirty(),this.hasmoved_callback&&this.hasmoved_callback(this)},hurt:function(){var a=this;this.stopHurting(),this.sprite=this.hurtSprite,this.hurting=setTimeout(this.stopHurting.bind(this),75)},stopHurting:function(){this.sprite=this.normalSprite,clearTimeout(this.hurting)},setAttackRate:function(a){this.attackCooldown=new c(a)}});return d})